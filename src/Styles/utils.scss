//!BG, BORDERS, TEXT-COLORS, DISPLAYS, LINK, UNDERLINE, OPACITY, POSITION, SHADOW, SIZING, TEXT, VIZIBILITY, SPACES, HOVER and ACTIVE

$states: (
  'primary': primary, 
  'secondary': secondary, 
  'success': success, 
  'accent': accent, 
  'secondary-accent': secondary-accent, 
  'danger': danger
);

$abstract-points-1: (
  '0': 0,
  '25': .25,
  '50': .50,
  '75': .75,
  '100': 1
);

$abstract-points-2: (
  '1': 1,
  '2': 2,
  '3': 3,
  '4': 4,
  '5': 5 
);

$abstract-states: (
  'all': all,
  'auto': auto,
  'none': none
);

$directions: (
  'top': top, 
  'right': right, 
  'bottom': bottom, 
  'left': left
);

$displays: (
  'none': none,
  'inline': inline,
  'block': block,
  'inline-block': inline-block,
  'flex': flex,
  'inline-flex': inline-flex,
  'grid': grid
);

$borderline-styles: (
  'solid': solid,
  'double': double,
  'dotted': dotted,
  'dashed': dashed,
  'wavy': wavy
);

$positions: (
  'static': static,
  'relative': relative,
  'absolute': absolute,
  'fixed': fixed,
  'sticky': sticky
);


@function bg-styles($value) {
  @return (
    --bg-color-opacity: 1,
    background-color: hsl(hue($value), saturation($value), lightness($value), 
      var(--bg-color-opacity))
  );
}

@function bg-gradient-styles($value) {
  @return (
    background-image: $value
  );
}

@function bg-opacity-styles($value) {
  @return (
    --bg-color-opacity: $value
  );
}

@function border-styles($value) {
  $border-colors: map-get($value, border-colors);
  $border-direction: map-get($value, border-directions);
  $border-size: map-get($value, border-sizes);
  $border-style: map-get($value, border-styles);

  @return (
    border: $border-size $border-style $border-color,
    border-#{$border-direction}: $border-size $border-style $border-color,
  );
}

@function br-styles($value) {
  @return (
    border-radius: $value
  );
}

@function text-color-styles($value) {
  @return (
    color: $value
  );
}

@function display-styles($value) {
  @return (
    display: $value
  );
}

@function user-select-styles($value) {
  @return (
    user-select: $value
  );
}

@function pointer-event-styles($value) {
  @return (
    pointer-events: $value
  );
}

@function underline-styles($value) {
  $color: map-get($value, 'colors');
  $decoration-style: map-get($value, 'decoration-styles');
  $underline-offset: map-get($value, 'underline-offsets');

  @return (
    text-decoration: underline $color $decoration-style,
    text-underline-offset: $underline-offset
  );
}

@function opacity-styles($value) {
  @return (
    opacity: $value
  );
}

@function opacity-hover-styles($value) {
  @return (
    _pseudo: (
      hover: (
        opacity: value
      )
    )
  );
}

@function position-styles($value) {
  @return (
    position: $value
  );
}

@function shadow-styles($value) {
  @return (
    shadow: 0 calc($value / 8) calc ($value / 1.5) color
  );
}

@function w-styles($value) {
  @return (
    width: calc($value * 1%)
  );
}

$utils: (
  'bg': (
    options: $states,
    value: colors,
    styles: bg-styles(map-get($utils, 'bg', value))
  ),
  'bg-gradient': (
    options: $states,
    value: gradients,
    styles: bg-gradient-styles(map-get($utils, 'bg-gradient', value))
  ),
  'bg-opacity': (
    options: $abstract-points-1,
    requires: (
      'bg'
    ),
    alternative-requires: (
      'bg-gradient'
    ),
    value: opacities,
    styles: bg-opacity-styles(map-get($utils, 'bg-opacity', value))
  ),
  'border': (
    options-1: $states,
    options-2: $directions,
    options-3: $abstract-points-2,
    options-4: $borderline-styles,
    value: (
      'border-colors': border-colors,
      'border-directions': border-directions,
      'border-sizes': border-sizes,
      'border-styles': border-styles
    ),
    styles: border-styles(map-get($utils, 'border', value))
  ),
  'br': (
    options: $abstract-points-2,
    value: border-radii,
    styles: (
      border-radius: br-styles(map-get($utils, 'br', value))
    )
  ),
  'text-color': (
    options: $states,
    value: colors,
    styles: text-color-styles(map-get($utils, 'text-color', value))
  ),
  'display': (
    options: $displays,
    value: displays
    styles: display-styles(map-get($utils, 'display', value))
  ),
  'user-select': (
    options: $abstract-states,
    value: user-selects,
    styles: user-select-styles(map-get($utils, 'user-select', value))
  ),
  'pointer-events': (
    options: $abstract-states,
    value: pointer-events,
    styles: pointer-event-styles(map-get($utils, 'pointer-events', value))
  ),
  'underline': (
    options-1: $states,
    options-2: $borderline-styles,
    options-3: $abstract-points-2,
    value: (
      'colors': colors,
      'decoration-styles': decoration-styles,
      'underline-offsets': underline-offsets
    )
    styles: underline-styles(map-get($utils, 'underline', value))
  ),
  'opacity': (
    options: $abstract-points-1,
    value: opacities,
    styles: opacity-styles(map-get($utils, 'opacity', value))
  ),
  'opacity-hover': (
    options: $abstract-points-1,
    value: opacities-hover,
    styles: opacity-hover-styles(map-get($utils, 'opacity-hover', value))
  ),
  'position': (
    options: $positions,
    value: positions,
    styles: position-styles(map-get($utils, 'position', value))
  ),
  'shadow': (
    options: $abstract-points-2,
    value: shadows,
    styles: shadow-styles(map-get($utils, 'shadow', value))
  ),
  'w': (
    options: $abstract-points-1,
    value: widths,
    styles: w-styles(map-get($utils, 'w', value))
  )
);