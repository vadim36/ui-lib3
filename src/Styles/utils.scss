$states: (
  'primary': primary, 
  'secondary': secondary, 
  'success': success, 
  'accent': accent, 
  'secondary-accent': secondary-accent, 
  'danger': danger
);

$abstract-points-1: (
  '0': 0,
  '25': .25,
  '50': .50,
  '75': .75,
  '100': 1
);

$abstract-points-2: (
  '1': 1,
  '2': 2,
  '3': 3,
  '4': 4,
  '5': 5 
);

$abstract-states: (
  'all': all,
  'auto': auto,
  'none': none
);

$directions-1: (
  'top': top, 
  'right': right, 
  'bottom': bottom, 
  'left': left
);

$directions-2: (
  'start': start,
  'center': center,
  'end': end
);

$displays: (
  'none': none,
  'inline': inline,
  'block': block,
  'inline-block': inline-block,
  'flex': flex,
  'inline-flex': inline-flex,
  'grid': grid
);

$borderline-styles: (
  'solid': solid,
  'double': double,
  'dotted': dotted,
  'dashed': dashed,
  'wavy': wavy
);

$positions: (
  'static': static,
  'relative': relative,
  'absolute': absolute,
  'fixed': fixed,
  'sticky': sticky
);

$wrapping: (
  'wrap': wrap,
  'nowrap': nowrap
);

$breaking: (
  'normal': normal,
  'break-all': break-all,
  'keep-all': keep-all,
  'break-word': break-word
);

$transforms: (
  'lowercase': lowercase,
  'uppercase': uppercase,
  'capitalize': capitalize,
);

$boldness: (
  'lighter': lighter,
  'light': light,
  'normal': normal,
  'medium': medium,
  'semibold': semibold,
  'bold': bold,
  'bolder': bolder
);

$text-styles: (
  'normal': normal,
  'italic': italic
);

$fonts: (
  'primary': primary,
  'monospace': monospace
);

$text-decorations: (
  'underline': underline,
  'line-through': line-through,
  'none': none
);

@function bg-styles($value) {
  @return (
    --bg-color-opacity: 1,
    background-color: hsl(hue($value), saturation($value), lightness($value), 
      var(--bg-color-opacity))
  );
}

@function bg-gradient-styles($value) {
  @return (
    background-image: $value
  );
}

@function bg-opacity-styles($value) {
  @return (
    --bg-color-opacity: $value
  );
}

@function border-styles($value) {
  $border-colors: map-get($value, border-colors);
  $border-direction: map-get($value, border-directions);
  $border-size: map-get($value, border-sizes);
  $border-style: map-get($value, border-styles);

  @return (
    border: $border-size $border-style $border-color,
    border-#{$border-direction}: $border-size $border-style $border-color,
  );
}

@function br-styles($value) {
  @return (
    border-radius: $value
  );
}

@function text-color-styles($value) {
  @return (
    color: $value
  );
}

@function display-styles($value) {
  @return (
    display: $value
  );
}

@function user-select-styles($value) {
  @return (
    user-select: $value
  );
}

@function pointer-event-styles($value) {
  @return (
    pointer-events: $value
  );
}

@function underline-styles($value) {
  $color: map-get($value, 'colors');
  $decoration-style: map-get($value, 'decoration-styles');
  $underline-offset: map-get($value, 'underline-offsets');

  @return (
    text-decoration: underline $color $decoration-style,
    text-underline-offset: $underline-offset
  );
}

@function opacity-styles($value) {
  @return (
    opacity: $value
  );
}

@function opacity-hover-styles($value) {
  @return (
    _pseudo: (
      hover: (
        opacity: value
      )
    )
  );
}

@function position-styles($value) {
  @return (
    position: $value
  );
}

@function shadow-styles($value) {
  @return (
    shadow: 0 calc($value / 8) calc ($value / 1.5) color
  );
}

@function w-styles($value) {
  @return (
    width: calc($value * 1%)
  );
}

@function h-styles($value) {
  @return (
    width: calc($value * 1%)
  );
}

@function text-align-styles($value) {
  @return (
    text-align: $value
  );
}

@function text-wrap-styles($value) {
  @return (
    text-wrap: $value
  );
}

@function word-break-styles($value) {
  @return (
    word-break: $value
  );
}

@function text-transform-styles($value) {
  @return (
    text-transform: $value
  );
}

@function fz-styles($value) {
  @return (
    font-size: $value
  );
}

@function font-weight-styles($value) {
  @return (
    font-weight: $value
  );
}

@function font-style-styles($value) {
  @return (
    font-style: $value
  );
}

@function m-styles($value) {
  $direction: map-get($value, margin-directions);
  $size: map-get($value, margin-size);

  @return (
    margin: calc($size * .25rem),
    margin-#{$direction}: calc($size * .25rem)
  );
}

@function p-styles($value) {
  $direction: map-get($value, padding-directions);
  $size: map-get($value, padding-size);

  @return (
    padding: calc($size * .25rem),
    padding-#{$direction}: calc($size * .25rem)
  );
}

$utils: (
  'bg': (
    options: $states,
    value: colors,
    styles: bg-styles(map-get($utils, 'bg', value))
  ),
  'bg-gradient': (
    options: $states,
    value: gradients,
    styles: bg-gradient-styles(map-get($utils, 'bg-gradient', value))
  ),
  'bg-opacity': (
    options: $abstract-points-1,
    requires: (
      'bg'
    ),
    alternative-requires: (
      'bg-gradient'
    ),
    value: opacities,
    styles: bg-opacity-styles(map-get($utils, 'bg-opacity', value))
  ),
  'border': (
    options-1: $states,
    options-2: $directions-1,
    options-3: $abstract-points-2,
    options-4: $borderline-styles,
    value: (
      'border-colors': border-colors,
      'border-directions': border-directions,
      'border-sizes': border-sizes,
      'border-styles': border-styles
    ),
    styles: border-styles(map-get($utils, 'border', value))
  ),
  'br': (
    options: $abstract-points-2,
    value: border-radii,
    styles: br-styles(map-get($utils, 'br', value))
  ),
  'text-color': (
    options: $states,
    value: colors,
    styles: text-color-styles(map-get($utils, 'text-color', value))
  ),
  'display': (
    options: $displays,
    value: displays
    styles: display-styles(map-get($utils, 'display', value))
  ),
  'user-select': (
    options: $abstract-states,
    value: user-selects,
    styles: user-select-styles(map-get($utils, 'user-select', value))
  ),
  'pointer-events': (
    options: $abstract-states,
    value: pointer-events,
    styles: pointer-event-styles(map-get($utils, 'pointer-events', value))
  ),
  'underline': (
    options-1: $states,
    options-2: $borderline-styles,
    options-3: $abstract-points-2,
    value: (
      'colors': colors,
      'decoration-styles': decoration-styles,
      'underline-offsets': underline-offsets
    )
    styles: underline-styles(map-get($utils, 'underline', value))
  ),
  'opacity': (
    options: $abstract-points-1,
    value: opacities,
    styles: opacity-styles(map-get($utils, 'opacity', value))
  ),
  'opacity-hover': (
    options: $abstract-points-1,
    value: opacities-hover,
    styles: opacity-hover-styles(map-get($utils, 'opacity-hover', value))
  ),
  'position': (
    options: $positions,
    value: positions,
    styles: position-styles(map-get($utils, 'position', value))
  ),
  'shadow': (
    options: $abstract-points-2,
    value: shadows,
    styles: shadow-styles(map-get($utils, 'shadow', value))
  ),
  'w': (
    options: $abstract-points-1,
    value: widths,
    styles: w-styles(map-get($utils, 'w', value))
  ),
  'h': (
    options: $abstract-points-1,
    value: heights,
    styles: h-styles(map-get($utils, 'h', value))
  ),
  'text-align': (
    options: $directions-2,
    value: text-aligns,
    styles: text-align-styles(map-get($utils, 'text-align', value))
  )
  'text-wrap': (
    options: $wrapping,
    value: text-wraps,
    styles: text-wrap-styles(map-get($utils, 'text-wrap', value))    
  ),
  'word-break': (
    options: $breaking,
    value: word-breaks,
    styles: word-break-styles(map-get($utils, 'word-break', value))  
  ),
  'text-transform': (
    options: $transforms,
    value: text-transforms,
    styles: text-transform-styles(map-get($utils, 'text-transform', value))
  ),
  'fz': (
    options: $abstract-points-2,
    value: font-sizes,
    styles: fz-styles(map-get($utils, 'fz', value))
  ),
  'font-weight': (
    options: $boldness,
    value: font-weights,
    styles: font-weight-styles(map-get($utils, 'font-weight', value))
  ),
  'font-style': (
    options: $text-styles,
    value: font-styles,
    styles: font-style-styles(map-get($utils, 'font-style', value))
  ),
  'font': (
    options: $fonts,
    value: fonts,
    styles: font-styles(map-get($utils, 'font', value))
  ),
  'text-decoration': (
    options: $text-decorations,
    value: text-decorations,
    styles: text-decoration-styles(map-get($utils, 'text-decoration', value))
  ),
  'm': (
    options-1: $directions-1,
    options-2: $abstract-points-2,
    value: (
      'margin-directions': margin-directions,
      'margin-size': margin-size
    ),
    styles: m-styles(map-get($utils, 'm', value))
  ),
  'p': (
    options-1: $directions-1,
    options-2: $abstract-points-2,
    value: (
      'padding-directions': padding-directions,
      'padding-size': padding-size
    ),
    styles: p-styles(map-get($utils, 'p', value))
  )
);